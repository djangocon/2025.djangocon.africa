# Generated by Django 5.0 on 2025-06-20 15:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConferenceDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Conference day date')),
                ('name', models.CharField(help_text="Day name (e.g., 'Mon 12 Aug')", max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this day is active')),
                ('order', models.PositiveIntegerField(default=1, help_text='Display order')),
            ],
            options={
                'verbose_name': 'Conference Day',
                'verbose_name_plural': 'Conference Days',
                'ordering': ['order', 'date'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Room name', max_length=255)),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Speaker's full name", max_length=255)),
                ('bio', models.TextField(blank=True, help_text='Speaker biography')),
                ('photo', models.ImageField(blank=True, help_text='Speaker photo', null=True, upload_to='speakers/')),
                ('company', models.CharField(blank=True, help_text="Speaker's company/organization", max_length=255)),
                ('github', models.CharField(blank=True, help_text='GitHub username', max_length=100)),
                ('twitter', models.CharField(blank=True, help_text='Twitter handle (without @)', max_length=100)),
                ('linkedin', models.URLField(blank=True, help_text='LinkedIn profile URL')),
                ('mastodon', models.CharField(blank=True, help_text='Mastodon handle (e.g., @user@instance.social)', max_length=200)),
                ('bluesky', models.CharField(blank=True, help_text='BlueSky handle (without @)', max_length=100)),
                ('email', models.EmailField(blank=True, help_text='Speaker email', max_length=254)),
            ],
            options={
                'verbose_name': 'Speaker',
                'verbose_name_plural': 'Speakers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Session title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Session description')),
                ('abstract', models.TextField(blank=True, help_text='Session abstract')),
                ('session_type', models.CharField(choices=[('keynote', 'Keynote'), ('talk', 'Talk'), ('workshop', 'Workshop'), ('panel', 'Panel'), ('break', 'Break')], default='talk', help_text='Type of session', max_length=20)),
                ('start_time', models.TimeField(help_text='Session start time')),
                ('end_time', models.TimeField(help_text='Session end time')),
                ('is_break', models.BooleanField(default=False, help_text='Whether this is a break/lunch session')),
                ('slug', models.SlugField(blank=True, help_text='URL slug for this session', max_length=255, unique=True)),
                ('conference_day', models.ForeignKey(help_text='Conference day', on_delete=django.db.models.deletion.CASCADE, to='schedule.conferenceday')),
                ('room', models.ForeignKey(help_text='Session room', on_delete=django.db.models.deletion.CASCADE, to='schedule.room')),
                ('speaker', models.ForeignKey(blank=True, help_text='Session speaker', null=True, on_delete=django.db.models.deletion.CASCADE, to='schedule.speaker')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['conference_day__order', 'start_time', 'room__name'],
            },
        ),
    ]
