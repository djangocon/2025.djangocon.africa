name: CodeCov
on: [push, pull_request]

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OS: ubuntu-latest
      PYTHON: '3.12'

    strategy:
      max-parallel: 4
      matrix:
        python-version:
        - '3.12'

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: pguser
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '2'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Generate tailwind css
      run: |
        npm i
        npm run tailwind

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Generate Report
      run: |
        pip install -r requirements.txt
        pip install coverage pytest pytest-django
        python manage.py collectstatic --noinput
        coverage run -m pytest
        coverage xml
      env:
        POSTGRES_DB: db
        POSTGRES_USER: pguser
        POSTGRES_HOST: localhost
        POSTGRES_PASSWORD: password
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
